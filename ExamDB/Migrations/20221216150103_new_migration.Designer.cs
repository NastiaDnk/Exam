// <auto-generated />
using System;
using ExamDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamDB.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20221216150103_new_migration")]
    partial class newmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExamDB.Models.AppointmentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Appointment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentDateTime = new DateTime(2022, 12, 30, 9, 45, 0, 0, DateTimeKind.Unspecified),
                            ClientID = 1
                        },
                        new
                        {
                            Id = 2,
                            AppointmentDateTime = new DateTime(2022, 12, 30, 10, 45, 0, 0, DateTimeKind.Unspecified),
                            ClientID = 2
                        },
                        new
                        {
                            Id = 3,
                            AppointmentDateTime = new DateTime(2022, 12, 30, 11, 15, 0, 0, DateTimeKind.Unspecified),
                            ClientID = 3
                        },
                        new
                        {
                            Id = 4,
                            AppointmentDateTime = new DateTime(2022, 12, 30, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            ClientID = 4
                        },
                        new
                        {
                            Id = 5,
                            AppointmentDateTime = new DateTime(2022, 12, 30, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientID = 5
                        },
                        new
                        {
                            Id = 6,
                            AppointmentDateTime = new DateTime(2022, 12, 30, 18, 10, 0, 0, DateTimeKind.Unspecified),
                            ClientID = 6
                        });
                });

            modelBuilder.Entity("ExamDB.Models.ClientEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HairdresserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientName = "James Johnson",
                            HairdresserName = "Sandy Brown",
                            WorkType = 3
                        },
                        new
                        {
                            Id = 2,
                            ClientName = "Simon Smiths",
                            HairdresserName = "Sandy Brown",
                            WorkType = 2
                        },
                        new
                        {
                            Id = 3,
                            ClientName = "Jessica Mayor",
                            HairdresserName = "Sirius Black",
                            WorkType = 0
                        },
                        new
                        {
                            Id = 4,
                            ClientName = "Harry Windsor",
                            HairdresserName = "Sandy Brown",
                            WorkType = 2
                        },
                        new
                        {
                            Id = 5,
                            ClientName = "Ron Weasley",
                            HairdresserName = "Sandy Brown",
                            WorkType = 0
                        },
                        new
                        {
                            Id = 6,
                            ClientName = "Jinny Johnson",
                            HairdresserName = "Sirius Black",
                            WorkType = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
